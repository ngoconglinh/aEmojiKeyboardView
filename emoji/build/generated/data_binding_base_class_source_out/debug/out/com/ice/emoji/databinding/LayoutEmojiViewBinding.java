// Generated by view binder compiler. Do not edit!
package com.ice.emoji.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.google.android.material.tabs.TabLayout;
import com.ice.emoji.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutEmojiViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FrameLayout flLine;

  @NonNull
  public final ImageView ivShare;

  @NonNull
  public final LinearLayout llTab;

  @NonNull
  public final TabLayout tabEmojiCategory;

  @NonNull
  public final View viewLine;

  @NonNull
  public final ViewPager2 vpEmoji;

  private LayoutEmojiViewBinding(@NonNull ConstraintLayout rootView, @NonNull FrameLayout flLine,
      @NonNull ImageView ivShare, @NonNull LinearLayout llTab, @NonNull TabLayout tabEmojiCategory,
      @NonNull View viewLine, @NonNull ViewPager2 vpEmoji) {
    this.rootView = rootView;
    this.flLine = flLine;
    this.ivShare = ivShare;
    this.llTab = llTab;
    this.tabEmojiCategory = tabEmojiCategory;
    this.viewLine = viewLine;
    this.vpEmoji = vpEmoji;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutEmojiViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutEmojiViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_emoji_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutEmojiViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.flLine;
      FrameLayout flLine = ViewBindings.findChildViewById(rootView, id);
      if (flLine == null) {
        break missingId;
      }

      id = R.id.ivShare;
      ImageView ivShare = ViewBindings.findChildViewById(rootView, id);
      if (ivShare == null) {
        break missingId;
      }

      id = R.id.llTab;
      LinearLayout llTab = ViewBindings.findChildViewById(rootView, id);
      if (llTab == null) {
        break missingId;
      }

      id = R.id.tabEmojiCategory;
      TabLayout tabEmojiCategory = ViewBindings.findChildViewById(rootView, id);
      if (tabEmojiCategory == null) {
        break missingId;
      }

      id = R.id.viewLine;
      View viewLine = ViewBindings.findChildViewById(rootView, id);
      if (viewLine == null) {
        break missingId;
      }

      id = R.id.vpEmoji;
      ViewPager2 vpEmoji = ViewBindings.findChildViewById(rootView, id);
      if (vpEmoji == null) {
        break missingId;
      }

      return new LayoutEmojiViewBinding((ConstraintLayout) rootView, flLine, ivShare, llTab,
          tabEmojiCategory, viewLine, vpEmoji);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
